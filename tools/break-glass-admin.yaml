tool:
  name: Break Glass Admin
  version: 1.0.0
  summary: Creates and manages a hidden admin account with a rotating password
  overview: >-
    The Break Glass Admin tool creates or manages a backdoor administrator
    account with a customizable, secure password. It supports both static and
    randomized password generation methods and is designed for emergency access
    to user devices. TEST
  features:
    - Unique Randomized Password for Each Computer
    - Set multiple randomized password types
    - Ability to set length, minimum character types, and many other options
  post_setup: >-
    - Configure the Configuration Profile

    - Scope the Policy

    - Once deployed, you can retrieve the Password for each computer from the
    Extension Attribute
steps:
  - id: profile
    name: Break Glass Admin Preferences
    module: osx-configuration-profiles/create
    properties:
      name: 'RCC - Break Glass Admin Preferences - '
    depends_on: []
  - id: step-2
    name: Break Glass Admin Preferences - Schema
    module: osx-configuration-profiles/acs-external-applications
    properties:
      schema: |-
        {
          "title": "Break Glass Admin (tech.rocketman.breakglass)",
          "description": "Commands to create a backdoor admin account with a randomized (or static) password, storing that password in an extension attribute in Jamf Pro.",
          "properties": {
            "passMethod": {
              "title": "Password Method",
              "description": "Defines the type of randomized password.",
              "property_order": 1,
              "type": "string",
              "default": "nato",
              "options": {
                "enum_titles": [
                  "NATO - Combines words from the NATO phonetic alphabet",
                  "XKCD - Using the system from the XKCD webcomic",
                  "NAMES - Same as above but only with the proper names database",
                  "WOPR - Like the launch codes in the 80s movie, 'Wargames'",
                  "PSEUDO RANDOM - Based on University of Nebraska' LAPS system",
                  "STATIC - Allows the admin to define a static password for the computer.",
                  "CUSTOM - Customizable format with the following defaults. 16 characters, 1 upper, 1 lower, 1 digit, and 1 special character"
                ]
              },
              "enum": [
                "nato",
                "xkcd",
                "names",
                "wopr",
                "pseudoRandom",
                "static",
                "custom"
              ]
            },
            "shortName": {
              "title": "Short Name",
              "description": "The username of the local account created.",
              "property_order": 2,
              "type": "string",
              "default": "breakglass"
            },
            "fullName": {
              "title": "Full Name",
              "description": "The full name of the local account created.",
              "property_order": 3,
              "type": "string",
              "default": "Break Glass Admin"
            },
            "adminVisible": {
              "title": "Admin Visible",
              "description": "Whether the account is hidden or visible",
              "property_order": 4,
              "type": "boolean",
              "default": "false"
            },
            "num": {
              "title": "Number of Words",
              "description": "The number of words, or characters, used in the password method",
              "property_order": 5,
              "type": "integer",
              "default": "4"
            },
            "force": {
              "title": "Force",
              "description": "If it doesn't have a password stored, or the password doesn't work, it will delete the account and create a new one.",
              "property_order": 6,
              "type": "boolean"
            },
            "staticPassword": {
              "title": "Static Password",
              "description": "Used in conjunction with the static password method. Defines the password that will be used.",
              "property_order": 7,
              "type": "string"
            },
            "customPassMethod": {
              "title": "Custom Password Method",
              "description": "Additional options for customizing the password format.",
              "property_order": 8,
              "type": "object",
              "properties": {
                "minLower": {
                  "title": "Minimum Lowercase Letters",
                  "description": "Minimum number of lowercase characters required.",
                  "property_order": 1,
                  "type": "integer"
                },
                "minUpper": {
                  "title": "Minimum Uppercase Letters",
                  "description": "Minimum number of uppercase characters required.",
                  "property_order": 2,
                  "type": "integer"
                },
                "minDigit": {
                  "title": "Minimum Digits",
                  "description": "Minimum number of digits required.",
                  "property_order": 3,
                  "type": "integer"
                },
                "minSpecial": {
                  "title": "Minimum Special Characters",
                  "description": "Minimum number of special characters required.",
                  "property_order": 4,
                  "type": "integer"
                }
              }
            },
            "advancedOptions": {
              "title": "Advanced Options",
              "description": "These are advanced options that should be used with caution. Make sure you read the documentation before setting these preferences!",
              "property_order": 9,
              "type": "object",
              "properties": {
                "keyChain": {
                  "title": "KeyChain",
                  "description": "Path to the user's keychain.",
                  "property_order": 1,
                  "type": "string"
                },
                "storage": {
                  "title": "Storage",
                  "description": "The place that the password is stored [local|remote|both].",
                  "property_order": 2,
                  "type": "string",
                  "options": {
                    "enum_titles": [
                      "LOCAL - Stores the password in a hidden, locked file on the user's computer",
                      "REMOTE - Stores the password in an Extension Attribute in Jamf Pro",
                      "BOTH - Stores the password in both places (belt with suspenders)"
                    ]
                  },
                  "enum": [
                    "local",
                    "remote",
                    "both"
                  ]
                },
                "extAttr": {
                  "title": "Extension Attribute",
                  "description": "The name of the extension attribute where the password is stored.",
                  "property_order": 3,
                  "type": "string"
                },
                "defaultPass": {
                  "title": "Default Passwords",
                  "description": "Used when the account already exists and we want a 'default password' to try if nothing is stored within the extension attribute in Jamf Pro.",
                  "property_order": 4,
                  "type": "array",
                  "items": {
                    "type": "string",
                    "title": "Password"
                  }
                }
              }
            }
          }
        }
      profile: ${{profile.name}}
      custom_domain: tech.rocketman.breakglass
    depends_on:
      - profile
  - id: policy
    name: Policy
    module: policy/create
    properties:
      xml: |
        <?xml version="1.0" encoding="UTF-8"?>
        <policy>
            <general>
                <name>RCC - Break Glass Admin - ${{sys.execution_id}}</name>
                <enabled>true</enabled>
                <trigger>CHECKIN</trigger>
                <trigger_checkin>true</trigger_checkin>
                <trigger_enrollment_complete>false</trigger_enrollment_complete>
                <trigger_login>false</trigger_login>
                <trigger_network_state_changed>false</trigger_network_state_changed>
                <trigger_startup>false</trigger_startup>
                <trigger_other/>
                <frequency>Once every week</frequency>
                <retry_event>none</retry_event>
                <retry_attempts>-1</retry_attempts>
                <notify_on_each_failed_retry>false</notify_on_each_failed_retry>
                <location_user_only>false</location_user_only>
                <target_drive>/</target_drive>
                <offline>false</offline>
                <category>
                    <id>-1</id>
                    <name>No category assigned</name>
                </category>
                <date_time_limitations>
                    <activation_date/>
                    <activation_date_epoch>0</activation_date_epoch>
                    <activation_date_utc/>
                    <expiration_date/>
                    <expiration_date_epoch>0</expiration_date_epoch>
                    <expiration_date_utc/>
                    <no_execute_on/>
                    <no_execute_start/>
                    <no_execute_end/>
                </date_time_limitations>
                <network_limitations>
                    <minimum_network_connection>No Minimum</minimum_network_connection>
                    <any_ip_address>true</any_ip_address>
                    <network_segments/>
                </network_limitations>
                <override_default_settings>
                    <target_drive>/</target_drive>
                    <distribution_point>default</distribution_point>
                    <force_afp_smb>false</force_afp_smb>
                    <sus>default</sus>
                </override_default_settings>
                <network_requirements>Any</network_requirements>
                <site>
                    <id>-1</id>
                    <name>NONE</name>
                </site>
            </general>
            <scope>
                <all_computers>false</all_computers>
                <computers/>
                <computer_groups/>
                <buildings/>
                <departments/>
                <limit_to_users>
                    <user_groups/>
                </limit_to_users>
                <limitations>
                    <users/>
                    <user_groups/>
                    <network_segments/>
                    <ibeacons/>
                </limitations>
                <exclusions>
                    <computers/>
                    <computer_groups/>
                    <buildings/>
                    <departments/>
                    <users/>
                    <user_groups/>
                    <network_segments/>
                    <ibeacons/>
                </exclusions>
            </scope>
            <package_configuration>
                <packages>
                    <size>0</size>
                </packages>
                <distribution_point>default</distribution_point>
            </package_configuration>
            <scripts>
                <size>1</size>
                <script>
                    <id>${{sys.rcc_script_id}}</id>
                    <name>Rocketman Command Center: Launch a Tool</name>
                    <priority>After</priority>
                    <parameter4>BreakGlassAdmin</parameter4>
                    <parameter5/>
                    <parameter6/>
                    <parameter7/>
                    <parameter8/>
                    <parameter9/>
                    <parameter10/>
                    <parameter11/>
                </script>
            </scripts>
            <printers>
                <size>0</size>
                <leave_existing_default/>
            </printers>
            <dock_items>
                <size>0</size>
            </dock_items>
            <account_maintenance>
                <accounts>
                    <size>0</size>
                </accounts>
                <directory_bindings>
                    <size>0</size>
                </directory_bindings>
                <management_account>
                    <action>doNotChange</action>
                </management_account>
                <open_firmware_efi_password>
                    <of_mode>none</of_mode>
                    <of_password_sha256/>
                </open_firmware_efi_password>
            </account_maintenance>
            <reboot>
                <message>This computer will restart in 5 minutes. Please save anything you are working on and log out by choosing Log Out from the bottom of the Apple menu.</message>
                <startup_disk>Current Startup Disk</startup_disk>
                <specify_startup/>
                <no_user_logged_in>Do not restart</no_user_logged_in>
                <user_logged_in>Do not restart</user_logged_in>
                <minutes_until_reboot>5</minutes_until_reboot>
                <start_reboot_timer_immediately>false</start_reboot_timer_immediately>
                <file_vault_2_reboot>false</file_vault_2_reboot>
            </reboot>
            <maintenance>
                <recon>false</recon>
                <reset_name>false</reset_name>
                <install_all_cached_packages>false</install_all_cached_packages>
                <heal>false</heal>
                <prebindings>false</prebindings>
                <permissions>false</permissions>
                <byhost>false</byhost>
                <system_cache>false</system_cache>
                <user_cache>false</user_cache>
                <verify>false</verify>
            </maintenance>
            <files_processes>
                <search_by_path/>
                <delete_file>false</delete_file>
                <locate_file/>
                <update_locate_database>false</update_locate_database>
                <spotlight_search/>
                <search_for_process/>
                <kill_process>false</kill_process>
                <run_command/>
            </files_processes>
            <user_interaction>
                <message_start/>
                <allow_users_to_defer>false</allow_users_to_defer>
                <allow_deferral_until_utc/>
                <allow_deferral_minutes>0</allow_deferral_minutes>
                <message_finish/>
            </user_interaction>
            <disk_encryption>
                <action>none</action>
            </disk_encryption>
        </policy>
    depends_on: []
  - id: ea
    name: Extension Attributes
    module: extension-attributes/create
    properties:
      name: 'RCC | Break Glass Admin Password | '
      description: This script will retrieve the Backdoor Admin Password
      data_type: STRING
      inventory_display_type: EXTENSION_ATTRIBUTES
      input_type: SCRIPT
      script_contents: >-
        #!/bin/zsh


        # Define the username of the backdoor admin account

        BreakglassAdminUsername=$(defaults read "/Library/Managed
        Preferences/tech.rocketman.breakglass.${{sys.execution_id}}.plist"
        shortName)


        # Check if rocketman (RCC) is installed

        if ! command -v rocketman &>/dev/null; then
            echo "<result>RCC Not Installed</result>"
            exit 0
        fi


        # Retrieve the password from the keychain

        BreakglassAdminPassword=$(rocketman GetBackdoorAdminPasswordFromKeychain
        --shortName "${BreakglassAdminUsername}" 2>/dev/null)

        exitCode=$?


        # Evaluate the result

        if [[ $exitCode -eq 0 && -n "$BreakglassAdminPassword" ]]; then
            # Successfully retrieved password
            echo "<result>$BreakglassAdminPassword</result>"
        elif [[ $exitCode -eq 1 ]]; then
            # Tool indicates no password set
            echo "<result>No Backdoor Admin Password Set</result>"
        else
            # Any other non-zero exit code is considered an unknown error
            echo "<result>Other Error Occurred</result>"
        fi
    depends_on: []
